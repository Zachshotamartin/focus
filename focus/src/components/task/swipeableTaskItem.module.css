.taskContainer {
  color: white;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: stretch;
  gap: 1.5rem;
}

.infoContainer {
  display: flex;
  background-color: var(--color-surface);
  flex-direction: column;
  border-radius: var(--radius);
  height: 100%;
  justify-content: center;
  align-items: center;
  flex: 1;
  padding: 2rem;
  box-shadow: var(--shadow);
  transition: all var(--transition);
  border: 1px solid var(--color-border);
  gap: 1rem;
  position: relative;
  overflow: hidden;
}

.infoContainer:hover {
  box-shadow: var(--shadow-lg);
  border-color: var(--color-primary);
}

.taskTitle {
  font-size: 1.75rem;
  font-weight: 700;
  text-align: center;
  margin-bottom: 1.5rem;
  width: 100%;
  background: linear-gradient(
    90deg,
    var(--color-primary) 0%,
    var(--color-accent) 100%
  );
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.taskDeadline {
  font-size: 1rem;
  color: var(--color-muted);
  margin: 0.5rem 0;
  padding: 0.75rem 1rem;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: var(--radius-sm);
  width: 100%;
  text-align: center;
}

.taskEstimatedDuration {
  font-size: 1rem;
  color: var(--color-muted);
  margin: 0.5rem 0 1.5rem;
  padding: 0.75rem 1rem;
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: var(--radius-sm);
  width: 100%;
  text-align: center;
}

.buttonContainer {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  width: 100%;
  margin-top: auto;
}

.buttonContainer button {
  flex: 1;
  padding: 0.75rem;
  border-radius: var(--radius);
  font-weight: 600;
  transition: all var(--transition);
}

.buttonContainer button:first-child {
  background-color: var(--color-primary);
}

.buttonContainer button:first-child:hover {
  background-color: var(--color-primary-hover);
  transform: translateY(-2px);
  box-shadow: var(--shadow);
}

.buttonContainer button:last-child {
  background-color: var(--color-success);
}

.buttonContainer button:last-child:hover {
  background-color: var(--color-success-hover);
  transform: translateY(-2px);
  box-shadow: var(--shadow);
}

.askGPTContainer {
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: center;
  flex: 2;
  height: 100%;
  background-color: var(--color-surface);
  border-radius: var(--radius);
  padding: 1.5rem;
  box-shadow: var(--shadow);
  transition: all var(--transition);
  border: 1px solid var(--color-border);
  gap: 1rem;
}

.askGPTContainer:hover {
  box-shadow: var(--shadow-lg);
  border-color: var(--color-primary);
}

.askGPTInput {
  width: 100%;
  background-color: var(--color-bg);
  color: white;
  border-radius: var(--radius);
  border: 1px solid var(--color-border);
  padding: 1rem;
  transition: all var(--transition);
  font-size: 0.95rem;
}

.askGPTInput:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.3);
}

.askGPTResponse {
  width: 100%;
  height: 100%;
  flex: 1;
  background-color: var(--color-bg);
  color: white;
  border-radius: var(--radius);
  border: 1px solid var(--color-border);
  padding: 1.25rem;
  margin-bottom: 0.75rem;
  overflow-y: auto;
  scrollbar-width: thin;
  scrollbar-color: var(--color-border) transparent;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.askGPTResponse::-webkit-scrollbar {
  width: 6px;
}

.askGPTResponse::-webkit-scrollbar-thumb {
  background-color: var(--color-border);
  border-radius: 3px;
}

.askGPTResponse::-webkit-scrollbar-thumb:hover {
  background-color: var(--color-primary);
}

.askGPTQuestion {
  align-self: flex-end;
  max-width: 80%;
  padding: 0.75rem 1rem;
  background-color: var(--color-primary);
  color: white;
  text-wrap: wrap;
  border-radius: var(--radius) var(--radius) 0 var(--radius);
  box-shadow: var(--shadow-sm);
  font-size: 0.95rem;
}

.askGPTAnswer {
  align-self: flex-start;
  max-width: 80%;
  padding: 0.75rem 1rem;
  background-color: var(--color-surface);
  color: white;
  border-radius: 0 var(--radius) var(--radius) var(--radius);
  border: 1px solid var(--color-border);
  margin-bottom: 0.5rem;
  text-wrap: wrap;
  box-shadow: var(--shadow-sm);
  font-size: 0.95rem;
}

.emptyState {
  color: var(--color-muted);
  font-size: 0.95rem;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 100%;
  padding: 1rem;
  font-style: italic;
  background-color: rgba(0, 0, 0, 0.1);
  border-radius: var(--radius-sm);
  border: 1px dashed var(--color-border);
}

/* Responsive styling */
@media (max-width: 1024px) {
  .taskContainer {
    flex-direction: column;
    gap: 1rem;
  }

  .infoContainer,
  .askGPTContainer {
    width: 100%;
    flex: none;
  }

  .infoContainer {
    min-height: 300px;
  }

  .askGPTContainer {
    min-height: 400px;
  }
}

@media (max-width: 768px) {
  .buttonContainer {
    flex-direction: column;
  }

  .buttonContainer button {
    width: 100%;
  }

  .taskTitle {
    font-size: 1.5rem;
  }
}

@media (max-width: 480px) {
  .infoContainer,
  .askGPTContainer {
    padding: 1rem;
  }

  .taskTitle {
    font-size: 1.25rem;
    margin-bottom: 1rem;
  }

  .askGPTQuestion,
  .askGPTAnswer {
    max-width: 90%;
    padding: 0.6rem 0.8rem;
  }
}

.inputContainer {
  position: relative;
  width: 100%;
}

.inputOverlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.05);
  border-radius: var(--radius);
  pointer-events: none;
}

.loadingContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  padding: 1rem 0;
}

.loadingDots {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.loadingDots span {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: var(--color-primary);
  display: inline-block;
  animation: loadingDot 1.4s infinite ease-in-out both;
}

.loadingDots span:nth-child(1) {
  animation-delay: -0.32s;
}

.loadingDots span:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes loadingDot {
  0%,
  80%,
  100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}
